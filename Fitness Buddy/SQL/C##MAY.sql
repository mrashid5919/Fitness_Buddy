/*
 Navicat Premium Data Transfer

 Source Server         : test
 Source Server Type    : Oracle
 Source Server Version : 190000
 Source Host           : localhost:1521
 Source Schema         : C##MAY

 Target Server Type    : Oracle
 Target Server Version : 190000
 File Encoding         : 65001

 Date: 14/08/2022 00:42:35
*/


-- ----------------------------
-- Table structure for CONTAINS
-- ----------------------------
DROP TABLE "C##MAY"."CONTAINS";
CREATE TABLE "C##MAY"."CONTAINS" (
  "MEAL_ID" NUMBER VISIBLE,
  "ITEM_ID" NUMBER VISIBLE,
  "QUANTITY" NUMBER(6,2) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of CONTAINS
-- ----------------------------

-- ----------------------------
-- Table structure for DIET_TYPE
-- ----------------------------
DROP TABLE "C##MAY"."DIET_TYPE";
CREATE TABLE "C##MAY"."DIET_TYPE" (
  "DIET" NUMBER VISIBLE NOT NULL,
  "CARB" NUMBER VISIBLE,
  "PROTEIN" NUMBER VISIBLE,
  "FAT" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of DIET_TYPE
-- ----------------------------
INSERT INTO "C##MAY"."DIET_TYPE" VALUES ('0', '50', '25', '25');
INSERT INTO "C##MAY"."DIET_TYPE" VALUES ('1', '10', '25', '65');
INSERT INTO "C##MAY"."DIET_TYPE" VALUES ('2', '40', '35', '25');
INSERT INTO "C##MAY"."DIET_TYPE" VALUES ('3', '55', '25', '20');

-- ----------------------------
-- Table structure for FOOD_ITEMS
-- ----------------------------
DROP TABLE "C##MAY"."FOOD_ITEMS";
CREATE TABLE "C##MAY"."FOOD_ITEMS" (
  "ITEM_ID" NUMBER VISIBLE NOT NULL,
  "ITEM_NAME" VARCHAR2(255 BYTE) VISIBLE,
  "CALORIE" NUMBER(6,2) VISIBLE,
  "CARBS" NUMBER(6,2) VISIBLE,
  "FAT" NUMBER(6,2) VISIBLE,
  "PROTEIN" NUMBER(6,2) VISIBLE,
  "VITAMIN_C" NUMBER(6,2) VISIBLE,
  "IRON" NUMBER(6,2) VISIBLE,
  "SODIUM" NUMBER(6,2) VISIBLE,
  "SUGAR" NUMBER(6,2) VISIBLE,
  "DIETARY_FIBER" NUMBER(6,2) VISIBLE,
  "MEASURE_QUANTITY" NUMBER(6,2) VISIBLE,
  "MEASURE_UNIT" VARCHAR2(100 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of FOOD_ITEMS
-- ----------------------------
INSERT INTO "C##MAY"."FOOD_ITEMS" VALUES ('1', 'Boiled Rice', '170', '38', '0', '4', '0', '2.86', '3.16', '0.1', '1.42', '1', 'Cup');

-- ----------------------------
-- Table structure for GOALS
-- ----------------------------
DROP TABLE "C##MAY"."GOALS";
CREATE TABLE "C##MAY"."GOALS" (
  "USER_ID" NUMBER VISIBLE,
  "CALORIE_INTAKE_GOAL" NUMBER(6,2) VISIBLE,
  "CALORIE_BURN_GOAL" NUMBER(6,2) VISIBLE,
  "WATER_INTAKE_GOAL" NUMBER VISIBLE,
  "DIET_TYPE" NUMBER VISIBLE,
  "VITAMIN_C" NUMBER VISIBLE,
  "IRON" NUMBER VISIBLE,
  "SODIUM" NUMBER VISIBLE,
  "SUGAR" NUMBER VISIBLE,
  "DIETARY_FIBER" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of GOALS
-- ----------------------------
INSERT INTO "C##MAY"."GOALS" VALUES ('6', '1310.83', NULL, '9', '2', '1', '1', '2', '2', '0');
INSERT INTO "C##MAY"."GOALS" VALUES ('22', '1561.89', NULL, '13', NULL, NULL, NULL, NULL, NULL, NULL);
INSERT INTO "C##MAY"."GOALS" VALUES ('21', '1570.89', NULL, '9', '1', '1', '1', '1', '2', '1');

-- ----------------------------
-- Table structure for MEAL_LOGGER
-- ----------------------------
DROP TABLE "C##MAY"."MEAL_LOGGER";
CREATE TABLE "C##MAY"."MEAL_LOGGER" (
  "MEAL_ID" NUMBER VISIBLE NOT NULL,
  "MEAL_TYPE" VARCHAR2(15 BYTE) VISIBLE,
  "MEAL_DATE" DATE VISIBLE,
  "USER_ID" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of MEAL_LOGGER
-- ----------------------------
INSERT INTO "C##MAY"."MEAL_LOGGER" VALUES ('1', 'B', TO_DATE('2022-08-13 00:00:00', 'SYYYY-MM-DD HH24:MI:SS'), '21');

-- ----------------------------
-- Table structure for MICRO_CONDITIONS
-- ----------------------------
DROP TABLE "C##MAY"."MICRO_CONDITIONS";
CREATE TABLE "C##MAY"."MICRO_CONDITIONS" (
  "ID" NUMBER VISIBLE NOT NULL,
  "DETAILS" VARCHAR2(255 BYTE) VISIBLE,
  "DEFICIENT" NUMBER(8,2) VISIBLE,
  "NORMAL" NUMBER(8,2) VISIBLE,
  "EXCESS" NUMBER(8,2) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of MICRO_CONDITIONS
-- ----------------------------
INSERT INTO "C##MAY"."MICRO_CONDITIONS" VALUES ('1', 'VitaminCM', '250', '90', '90');
INSERT INTO "C##MAY"."MICRO_CONDITIONS" VALUES ('2', 'VitaminCF', '250', '75', '75');
INSERT INTO "C##MAY"."MICRO_CONDITIONS" VALUES ('3', 'IronM', '12', '8.7', '8.7');
INSERT INTO "C##MAY"."MICRO_CONDITIONS" VALUES ('4', 'IronF', '20', '18', '18');
INSERT INTO "C##MAY"."MICRO_CONDITIONS" VALUES ('5', 'Sodium', '1500', '1500', '1000');
INSERT INTO "C##MAY"."MICRO_CONDITIONS" VALUES ('6', 'SugarM', '36', '36', '20');
INSERT INTO "C##MAY"."MICRO_CONDITIONS" VALUES ('7', 'SugarF', '25', '25', '15');
INSERT INTO "C##MAY"."MICRO_CONDITIONS" VALUES ('8', 'FiberM', '35', '25', '25');
INSERT INTO "C##MAY"."MICRO_CONDITIONS" VALUES ('9', 'FiberF', '50', '38', '38');

-- ----------------------------
-- Table structure for USERS
-- ----------------------------
DROP TABLE "C##MAY"."USERS";
CREATE TABLE "C##MAY"."USERS" (
  "USER_ID" NUMBER VISIBLE NOT NULL,
  "USERNAME" VARCHAR2(100 BYTE) VISIBLE NOT NULL,
  "FIRST_NAME" VARCHAR2(50 BYTE) VISIBLE,
  "LAST_NAME" VARCHAR2(50 BYTE) VISIBLE,
  "WEIGHT" FLOAT(126) VISIBLE,
  "HEIGHT" FLOAT(126) VISIBLE,
  "DATE_OF_BIRTH" VARCHAR2(50 BYTE) VISIBLE,
  "GENDER" CHAR(1 BYTE) VISIBLE,
  "EMAIL" VARCHAR2(50 BYTE) VISIBLE NOT NULL,
  "PASSWORD" VARCHAR2(32 BYTE) VISIBLE NOT NULL,
  "BMI" NUMBER(4,2) VISIBLE,
  "DESIRE" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of USERS
-- ----------------------------
INSERT INTO "C##MAY"."USERS" VALUES ('6', 'mr_5919', 'Mayesha', 'Rashid', '83', '63', '15-Nov-1999', 'F', 'mayesha1599@gmail.com', 'abcd', '32.41', '1');
INSERT INTO "C##MAY"."USERS" VALUES ('22', 'scorp65', 'Shafin', 'Sowdagor', '85', '68', '10-Nov-2000', 'M', 'sowdagorshafin@gmail.com', 'abcd', '28.49', '1');
INSERT INTO "C##MAY"."USERS" VALUES ('21', 'chonky_mubash', 'Mubasshira', 'Musarrat', '48', '63', '31-Dec-2000', 'F', 'mubash@gmail.com', '1234', '18.75', NULL);

-- ----------------------------
-- Function structure for KHOJ
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "C##MAY"."KHOJ" AS
BEGIN
IF GENDER='F' THEN
	IF OP=1 THEN
		SELECT VITAMIN_C INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=2;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=2;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=2;
		END IF;
	ELSIF OP=2 THEN
		SELECT IRON INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=4;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=4;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=4;
		END IF;
	ELSIF OP=3 THEN
		SELECT SODIUM INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=5;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=5;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=5;
		END IF;
	ELSIF OP=4 THEN
		SELECT SUGAR INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=7;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=7;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=7;
		END IF;
	ELSE
		SELECT DIETARY_FIBER INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=9;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=9;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=9;
		END IF;
	END IF;
ELSE
	IF OP=1 THEN
		SELECT VITAMIN_C INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=1;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=1;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=1;
		END IF;
	ELSIF OP=2 THEN
		SELECT IRON INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=3;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=3;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=3;
		END IF;
	ELSIF OP=3 THEN
		SELECT SODIUM INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=5;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=5;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=5;
		END IF;
	ELSIF OP=4 THEN
		SELECT SUGAR INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=6;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=6;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=6;
		END IF;
	ELSE
		SELECT DIETARY_FIBER INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=8;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=8;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=8;
		END IF;
	END IF;
END IF;
--RETURN RES;
END;
/

-- ----------------------------
-- Function structure for KHOJ2
-- ----------------------------
CREATE OR REPLACE
FUNCTION "C##MAY"."KHOJ2" AS
BEGIN
IF GENDER='F' THEN
	IF OP=1 THEN
		SELECT VITAMIN_C INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=2;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=2;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=2;
		END IF;
	ELSIF OP=2 THEN
		SELECT IRON INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=4;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=4;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=4;
		END IF;
	ELSIF OP=3 THEN
		SELECT SODIUM INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=5;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=5;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=5;
		END IF;
	ELSIF OP=4 THEN
		SELECT SUGAR INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=7;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=7;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=7;
		END IF;
	ELSE
		SELECT DIETARY_FIBER INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=9;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=9;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=9;
		END IF;
	END IF;
ELSE
	IF OP=1 THEN
		SELECT VITAMIN_C INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=1;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=1;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=1;
		END IF;
	ELSIF OP=2 THEN
		SELECT IRON INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=3;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=3;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=3;
		END IF;
	ELSIF OP=3 THEN
		SELECT SODIUM INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=5;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=5;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=5;
		END IF;
	ELSIF OP=4 THEN
		SELECT SUGAR INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=6;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=6;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=6;
		END IF;
	ELSE
		SELECT DIETARY_FIBER INTO VAL
		FROM GOALS
		WHERE USER_ID=US_ID;
		IF VAL=0 THEN
			SELECT DEFICIENT INTO RES FROM MICRO_CONDITIONS WHERE ID=8;
		ELSIF VAL=1 THEN
			SELECT NORMAL INTO RES FROM MICRO_CONDITIONS WHERE ID=8;
		ELSE
			SELECT EXCESS INTO RES FROM MICRO_CONDITIONS WHERE ID=8;
		END IF;
	END IF;
END IF;
RETURN RES;
END;
/

-- ----------------------------
-- Sequence structure for FOOD_ITEM_SEQUENCE
-- ----------------------------
DROP SEQUENCE "C##MAY"."FOOD_ITEM_SEQUENCE";
CREATE SEQUENCE "C##MAY"."FOOD_ITEM_SEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for MEAL_SEQUENCE
-- ----------------------------
DROP SEQUENCE "C##MAY"."MEAL_SEQUENCE";
CREATE SEQUENCE "C##MAY"."MEAL_SEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for MEAL_SEQUENCE1
-- ----------------------------
DROP SEQUENCE "C##MAY"."MEAL_SEQUENCE1";
CREATE SEQUENCE "C##MAY"."MEAL_SEQUENCE1" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for USER_SEQUENCE
-- ----------------------------
DROP SEQUENCE "C##MAY"."USER_SEQUENCE";
CREATE SEQUENCE "C##MAY"."USER_SEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Primary Key structure for table DIET_TYPE
-- ----------------------------
ALTER TABLE "C##MAY"."DIET_TYPE" ADD CONSTRAINT "SYS_C008068" PRIMARY KEY ("DIET");

-- ----------------------------
-- Primary Key structure for table FOOD_ITEMS
-- ----------------------------
ALTER TABLE "C##MAY"."FOOD_ITEMS" ADD CONSTRAINT "SYS_C008086" PRIMARY KEY ("ITEM_ID");

-- ----------------------------
-- Primary Key structure for table MEAL_LOGGER
-- ----------------------------
ALTER TABLE "C##MAY"."MEAL_LOGGER" ADD CONSTRAINT "SYS_C008100" PRIMARY KEY ("MEAL_ID");

-- ----------------------------
-- Triggers structure for table MEAL_LOGGER
-- ----------------------------
CREATE TRIGGER "C##MAY"."MEAL_TRIG" BEFORE INSERT ON "C##MAY"."MEAL_LOGGER" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
BEGIN
IF :NEW.MEAL_ID IS NULL
THEN
:NEW.MEAL_ID:=MEAL_SEQUENCE.NEXTVAL;
END IF;
END;

--SHOW ERRORS TRIGGER MEAL_TRIG;

/*CREATE TABLE DIET_TYPE
(
DIET INTEGER,
CARB INTEGER,
PROTEIN INTEGER,
FAT INTEGER,
PRIMARY KEY (DIET)
);*/;

-- ----------------------------
-- Primary Key structure for table MICRO_CONDITIONS
-- ----------------------------
ALTER TABLE "C##MAY"."MICRO_CONDITIONS" ADD CONSTRAINT "SYS_C008069" PRIMARY KEY ("ID");

-- ----------------------------
-- Primary Key structure for table USERS
-- ----------------------------
ALTER TABLE "C##MAY"."USERS" ADD CONSTRAINT "SYS_C008065" PRIMARY KEY ("USER_ID");

-- ----------------------------
-- Uniques structure for table USERS
-- ----------------------------
ALTER TABLE "C##MAY"."USERS" ADD CONSTRAINT "SYS_C008066" UNIQUE ("USERNAME") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "C##MAY"."USERS" ADD CONSTRAINT "SYS_C008067" UNIQUE ("EMAIL") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table USERS
-- ----------------------------
ALTER TABLE "C##MAY"."USERS" ADD CONSTRAINT "SYS_C008062" CHECK ("USERNAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "C##MAY"."USERS" ADD CONSTRAINT "SYS_C008063" CHECK ("EMAIL" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "C##MAY"."USERS" ADD CONSTRAINT "SYS_C008064" CHECK ("PASSWORD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table USERS
-- ----------------------------
CREATE TRIGGER "C##MAY"."ADD_CALORIE_GOAL" AFTER INSERT ON "C##MAY"."USERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE BMR FLOAT;
AGE INTEGER;
WATER INTEGER;
BEGIN
IF :NEW.GENDER ='F'
THEN
--DBMS_OUTPUT.PUT_LINE(:NEW.GENDER);
BMR:=1.2*(655.1+(9.563* :NEW.WEIGHT)+(1.85*2.54* :NEW.HEIGHT)-4.676*(MONTHS_BETWEEN(TRUNC(SYSDATE),TO_DATE(:NEW.DATE_OF_BIRTH,'DD-MON-YYYY'))/12));
ELSE
--DBMS_OUTPUT.PUT_LINE(:NEW.GENDER);
BMR:=1.2*(66.47+(13.75*:NEW.WEIGHT)+(5.003*2.54*:NEW.HEIGHT)-6.755*(MONTHS_BETWEEN(TRUNC(SYSDATE),TO_DATE(:NEW.DATE_OF_BIRTH,'DD-MON-YYYY'))/12));
END IF;
IF :NEW.DESIRE=1 THEN
	BMR:=(2*BMR)/3;
ELSIF :NEW.DESIRE=2 THEN
	BMR:=(4*BMR)/3;
END IF;

AGE:=MONTHS_BETWEEN(TRUNC(SYSDATE),TO_DATE(:NEW.DATE_OF_BIRTH,'DD-MON-YYYY'))/12;
IF AGE<=13 THEN
WATER:=8;
ELSIF AGE<=18 THEN
WATER:=10;
ELSIF :NEW.GENDER='F' THEN
WATER:=9;
ELSE
WATER:=13;
END IF;


INSERT INTO GOALS(USER_ID,CALORIE_INTAKE_GOAL,WATER_INTAKE_GOAL)
VALUES(:NEW.USER_ID,BMR,WATER);

END;
/
CREATE TRIGGER "C##MAY"."ADD_WATER_INTAKE" AFTER INSERT ON "C##MAY"."USERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE AGE INTEGER;
WATER INTEGER;
BEGIN
AGE:=MONTHS_BETWEEN(TRUNC(SYSDATE),TO_DATE(:NEW.DATE_OF_BIRTH,'DD-MON-YYYY'))/12;
IF AGE<=13 THEN
WATER:=8;
ELSIF AGE<=18 THEN
WATER:=10;
ELSIF :NEW.GENDER='F' THEN
WATER:=9;
ELSE
WATER:=13;
END IF;
UPDATE GOALS
SET WATER_INTAKE_GOAL=WATER
WHERE USER_ID=:NEW.USER_ID;
END;
/
CREATE TRIGGER "C##MAY"."USER_BIN" BEFORE INSERT ON "C##MAY"."USERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
BEGIN
IF :NEW.USER_ID IS NULL
THEN
:NEW.USER_ID:=USER_SEQUENCE.NEXTVAL;
END IF;
END;

--DROP SEQUENCE USER_SEQUENCE;

-- ----------------------------
-- Foreign Keys structure for table CONTAINS
-- ----------------------------
ALTER TABLE "C##MAY"."CONTAINS" ADD CONSTRAINT "SYS_C008102" FOREIGN KEY ("MEAL_ID") REFERENCES "C##MAY"."MEAL_LOGGER" ("MEAL_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "C##MAY"."CONTAINS" ADD CONSTRAINT "SYS_C008103" FOREIGN KEY ("ITEM_ID") REFERENCES "C##MAY"."FOOD_ITEMS" ("ITEM_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MEAL_LOGGER
-- ----------------------------
ALTER TABLE "C##MAY"."MEAL_LOGGER" ADD CONSTRAINT "SYS_C008101" FOREIGN KEY ("USER_ID") REFERENCES "C##MAY"."USERS" ("USER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
